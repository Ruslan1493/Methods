using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace NumberCalculations
{
    class NumCalc
    {
        static void Main(string[] args)
        {
            double[] doubleNum = Console.ReadLine().Split(' ').Select(double.Parse).ToArray();
            decimal[] decimalNum = Console.ReadLine().Split(' ').Select(decimal.Parse).ToArray();
            Console.WriteLine("Double:");
            Console.WriteLine("Min = {0}, Max = {1}, Sum = {2}, Avg = {3}, Product = {4}",
            MinDouble(doubleNum), maxDouble(doubleNum), SumDouble(doubleNum), AvgDouble(doubleNum),ProductOfDouble(doubleNum));
            Console.WriteLine("Decimal:");
            Console.WriteLine("Min = {0}, Max = {1}, Sum = {2}, Avg = {3}, Product = {4}",
            MinDecimal(decimalNum), maxDecimal(decimalNum), SumDecimal(decimalNum), AvgDecimal(decimalNum), ProductOfDecimal(decimalNum));
        }

        static double MinDouble(double[] num)
        {
            double min = num[0];
            for (int i = 1; i < num.Length;  i++)
            {
                if (num[i] < min)
                    min = num[i];
            }
            return min;
        }

        static decimal MinDecimal(decimal[] num)
        {
            decimal min = num[0];
            for (int i = 1; i < num.Length; i++)
            {
                if (num[i] < min)
                    min = num[i];
            }
            return min;
        }

        static double maxDouble(double[] num)
        {
            double max = num[0];
            for (int i = 1; i < num.Length; i++)
            {
                if (num[i] > max)
                    max = num[i];
            }
            return max;
        }

        static decimal maxDecimal(decimal[] num)
        {
            decimal max = num[0];
            for (int i = 1; i < num.Length; i++)
            {
                if (num[i] > max)
                    max = num[i];
            }
            return max;
        }

        static double SumDouble(double[] num)
        {
            double sum = 0;
            for (int i = 0; i < num.Length; i++)
            {
                sum += num[i];
            }
            return sum;
        }

        static decimal SumDecimal(decimal[] num)
        {
            decimal sum = 0;
            for (int i = 0; i < num.Length; i++)
            {
                sum += num[i];
            }
            return sum;
        }

        static double AvgDouble(double[] num)
        {
            double avg = SumDouble(num) / num.Length;
            return avg;
        }

        static decimal AvgDecimal(decimal[] num)
        {
            decimal avg = SumDecimal(num) / num.Length;
            return avg;
        }

        static double ProductOfDouble(double[] num)
        {
            double product = num[0];
            for (int i = 1; i < num.Length; i++)
            {
                product *= num[i];
            }
            return product;
        }

        static decimal ProductOfDecimal(decimal[] num)
        {
            decimal product = num[0];
            for (int i = 1; i < num.Length; i++)
            {
                product *= num[i];
            }
            return product;
        }
    }
}
